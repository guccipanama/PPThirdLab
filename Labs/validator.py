import re
import json
import pickle
from tqdm import tqdm

class validator:
    def __init__(self):
        pass

    def check_telephone(telephone) -> bool:  # тайпхинтинг
        if type(telephone) != str:
            return False
        pattern = '\+7-\(\d{3}\)-\d{3}-\d{2}-\d{2}$'
        if re.match(pattern, telephone):
            return True
        return False

    def check_height(height: str) -> bool:
        if type(height) != str:
            return False
        pattern = '[12]\.\d'
        if re.match(pattern, height):
            return True
        return False

    def check_inn(inn: str) -> bool:
        if type(inn) != str:
            return False
        if len(inn) == 12:
            return True
        return False

    def check_passport(number: int) -> bool:
        if len(str(number)) == 6:
            return True
        return False

    def check_occupation(occupation: str) -> bool:
        if type(occupation) != str:
            return False
        s = ['Копирайтер', 'Супервайзер', 'Кодер', 'Сталевар', 'Правовед', 'Официант', 'Менеджер по рекламе',
             'Фальцовщик', 'Инженер-технолог', 'Слесарь-механик', 'Садовник', 'Редактор', 'Диктор', 'Терапевт',
             'Ректор', 'Генный инженер', 'Банковский кассир-операционист', 'Корректор', 'Невропатолог', 'Юрист',
             'Медиа-байер', 'Диджей', 'Моторист', 'Критик', 'Травматолог', 'Билетный кассир', 'Балетмейстер',
             'Татуировщик', 'Дизайнер-модельер', 'Детектив', 'Банкир', 'Флорист', 'Историк', 'Библиотекарь',
             'Краснодеревщик', 'Ювелир',
             'Контент-менеджер', 'Хореограф', 'Страховой агент', 'Монтажник', 'Администратор ресторана', 'Типограф',
             'Вирусолог', 'Инженер-химик', 'Маклер', 'Цветочница', 'Политолог', 'Телохранитель', 'Электрик',
             'Программист', 'Мерчендайзер', 'Системный администратор', 'Лингвист', 'Пекарь', 'Астроном', 'Микробиолог',
             'Аниматор', 'Дефектолог', 'Кладовщик', 'Блогер', 'Секретарь-стенографистка', 'Специалист по стрижке овец',
             'Почвовед', 'Метеоролог', 'Менеджер по персоналу', 'Прораб', 'Сапожник', 'Брокер', 'Проктолог',
             'Врач скорой помощи', 'Инженер-конструктор', 'Штукатур', 'Учитель', 'Дорожный инспектор', 'Звукооператор',
             'Мусоропроводчик', 'Логопед',
             'Палеонтолог', 'Анестезиолог', 'Бортинженер', 'Комбайнер', 'Финансовый аналитик', 'Искусствовед',
             'Массажист', 'Министр', 'Администратор базы данных', 'Манекенщица', 'Выпускающий редактор', 'Киномеханик',
             'Тюремный надзиратель', 'Литейщик', 'Тестировщик', 'Специалист по ВЭД', 'Бренд-менеджер',
             'Бизнес-аналитик', 'Ортопед', 'Web-дизайнер', 'Слесарь', 'Бондарь', 'Менеджер по продажам',
             'Торговый представитель', 'Ландшафтный дизайнер', 'Ремонтник', 'ОператорПК', 'Потье', 'Риелтор',
             'Экономист', 'Мастер', 'Моряк', 'Нанотехнолог', 'Радиомеханик', 'Гид-переводчик', 'Отделочник',
             'Кинодраматург', 'Булочник', 'Главный инженер', 'Администратор предприят торговли', 'Эндокринолог',
             'Охранник', 'Почтальон', 'Фельдшер', 'Генетик', 'Кинолог', 'Животновод', 'Администратор салона красоты',
             'Ихтиолог',
             'Токарь', 'Фермер', 'Испытатель', 'Фотомодель', 'Стрелочник', 'Кровельщик', 'Шахтер', 'Горняк',
             'Экспедитор', 'Продюсер', 'Прозектор', 'Матрос', 'Менеджер по PR', 'Аппаратчик-оператор', 'Дипломат',
             'Лоббист', 'Проводник', 'Кардлог', 'Биофизик', 'Наладчик', 'Менеджер по закупкам', 'Конвоир',
             'Консультант по туризму', 'Драпировщик', 'Доярка', 'Налоговый инспектор', 'Портной', 'Философ',
             'Сурдопедагог', 'Дизайнер рекламы', 'Статистик', 'Web-программист', 'Спортивный врач', 'Зоолог',
             'Машинистка', 'Переплетчик', 'Спортсмен', 'Космонавт', 'Шлифовщик', 'Верстальщик', 'Музыкант', 'Педагог',
             'Сантехник', 'Невролог', 'Токсиколог', 'Дизайнер', 'Аудитор', 'Воздухоплаватель', 'Архитектор',
             'Дерматовенеролог', 'Биоинженер', 'Полицейский', 'Архитектор-проектировщик', 'Дегустатор', 'Химик',
             'Диетолог', 'Менеджер по туризму', 'Орнитолог', 'Дерматолог', 'Кризис-менеджер', 'Бизнес-тренер',
             'Электромонтажник', 'Художник',
             'Окулист', 'Уролог', 'Стюардесса', 'Дистрибутор', 'Кинорежиссер', 'Технолог', 'Имиджмейкер',
             'Секретарь-референт', 'Инфекционист', 'Андролог', 'Курьер', 'Преподаватель',
             'Скульптор', 'Автогонщик', 'Журналист', 'Инженер', 'Мусорщик', 'Хирург', 'Ассистент менеджера по продажам',
             'Промышленный альпинист', 'Плотник', 'Месильщик', 'Постановщик трюков',
             'Психотерапевт', 'Фрезеровщик', 'Оториноларинголог', 'Звукорежиссер', 'Гидролог', 'Сценарист',
             'Главный конструктор', 'Мануалист', 'Настройщик музыкальных инструментов', 'Милиционер', 'Психолог',
             'Промоутер', 'Мультипликатор', 'Продавец', 'Реабилитолог', 'Облицовщик', 'Главный технолог',
             'Менеджер по работе с клиентами', 'Уборщица', 'Водитель', 'Актер', 'Эколог', 'Ботаник', 'Дирижер',
             'Тележурналист', 'Гинеколог', 'Маникюрша', 'Web-интегратор', 'Повар', 'Бармен', 'Рихтовщик', 'Металлург',
             'Физик', 'Заведующий складом', 'Офтальмолог', 'Иммунолог', 'Стилист', 'Машинист', 'Автомеханик',
             'Кинооператор', 'Писатель', 'Следователь', 'Фармацевт', 'Тракторист', 'Переводчик', 'Теолог',
             'Реаниматолог', 'Врач-диетолог', 'Математик', 'Археолог', 'Прокурор', 'Культуролог',
             'Этнограф', 'Грузчик', 'Штурман', 'Администратор сайта', 'Бизнес-консультант', 'Закройщик',
             'Бригадир железнодорожного пути', 'Библиограф', 'Танцор балета', 'Пастух', 'Педиатр', 'Стоматолог',
             'Проректор', 'Маркетолог', 'Офис-менеджер', 'Химик-технолог', 'Фотограф', 'Шеф-повар', 'Бухгалтер',
             'Менеджер по логистике', 'Психиатр', 'Священнослужитель',
             'Мясник', 'Бренд-дизайнер', 'Технический писатель', 'Артист цирка', 'Судебный пристав', 'Визажист',
             'Капитан судна', 'Парикмахер', 'Бортмеханик', 'Консультант телефона доверия', 'Винодел', 'Швея',
             'Продавец-консультант', 'Столяр', 'Медицинская сестра', 'Иллюстратор', 'Модель', 'Социолог', 'Реставратор',
             'Кондитер', 'Биолог', 'Оператор call-центра', 'Инкассатор',
             'Агроном', 'Пожарный', 'Диспетчер', 'Радист', 'Картограф', 'Администратор гостиницы', 'Лоцман', 'Водолаз',
             'Логист', 'Конструктор', 'Биохимик', 'Менеджер',
             'Сексолог', 'Косметол', 'Телеграфист', 'Тифлопедагог', 'Скотник', 'Геоэколог', 'Спортивный тренер',
             'Маляр', 'Авиадиспетчер', 'Нотариус', 'Нефролог', 'Энергетик', 'Композитор', 'Летчик', 'Строитель',
             'Кассир', 'Востоковед', 'Агент по туризму', 'Таксист', 'Сметчик', 'Онколог', 'Художник по костюму',
             'HTML-верстальщик', 'Религиовед', 'Жрец', 'Спичрайтер', 'Автослесарь', 'Венеролог', 'Геолог', 'Крановщик',
             'Сварщик', 'Монах', 'Дворник', 'Товаровед', 'Каскадер', 'Нейрохирург', 'Режиссер', 'Пчеловод',
             'Менеджер торгового зал', 'Судья', 'Геодезист', 'Кардиохирург', 'Бортпроводник', 'Адвокат', 'Ветеринар',
             'Акушер']
        if occupation not in s:
            return False
        return True

    def check_age(age: int) -> bool:
        if type(age) != int:
            return False
        if age < 14 or age > 60:
            return False
        return True

    def check_views(views: str) -> bool:
        if type(views) != str:
            return False
        a = ['Умеренные', 'Консервативные', 'Социалистические', 'Анархистские', 'Либеральные', 'Коммунистические',
             'Либертарианские', 'Индифферентные']
        if views not in a:
            return False
        return True

    def check_worldview(worldview: str) -> bool:
        if type(worldview) != str:
            return False
        a = ["Агностицизм", "Атеизм", "Секулярный гуманизм", "Католицизм", "Конфуцианство", "Иудаизм", "Деизм",
             "Пантеизм", "Буддизм", "Либертарианские"]
        if worldview not in a:
            return False
        return True

    def check_address(address: str) -> bool:
        if type(address) == str:
            pattern = '[а-яА-Я.\s\d-]+\s+[0-9]+$'
            if re.match(pattern, address):
                return True
        return False


def val(path_input_json, path_input) -> None:
    data = json.load(open(path_input_json, encoding='utf-8'))

    valid_data = list()
    telephone = 0
    height = 0
    inn = 0
    passport_number = 0
    occupation = 0
    age = 0
    political_views = 0
    worldview = 0
    address = 0

    with tqdm(total=len(data)) as progressbar:
        for person in data:
            temp = True
            if not validator.check_telephone(person["telephone"]):
                telephone += 1
                temp = False
            if not validator.check_height(person["height"]):
                height += 1
                temp = False
            if not validator.check_inn(person['inn']):
                inn += 1
                temp = False
            if not validator.check_passport(person['passport_number']):
                passport_number += 1
                temp = False
            if not validator.check_occupation(person["occupation"]):
                occupation += 1
                temp = False
            if not validator.check_age(person['age']):
                age += 1
                temp = False
            if not validator.check_views(person['political_views']):
                political_views += 1
                temp = False
            if not validator.check_worldview(person['worldview']):
                worldview += 1
                temp = False
            if not validator.check_address(person["address"]):
                address += 1
                temp = False
            if temp:
                valid_data.append(person)
            progressbar.update(1)

    pickle.dump(valid_data, open(path_input, 'wb'))
    print("Готово!")
    print(f"Записи сохранены в файл: {path_input}")